// Code generated from SequenceLexer.g4 by ANTLR 4.9. DO NOT EDIT.

package interpreter

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 51, 319,
	8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5,
	9, 5, 4, 6, 9, 6, 4, 7, 9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4,
	11, 9, 11, 4, 12, 9, 12, 4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16,
	9, 16, 4, 17, 9, 17, 4, 18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9,
	21, 4, 22, 9, 22, 4, 23, 9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26,
	4, 27, 9, 27, 4, 28, 9, 28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4,
	32, 9, 32, 4, 33, 9, 33, 4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37,
	9, 37, 4, 38, 9, 38, 4, 39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9,
	42, 4, 43, 9, 43, 4, 44, 9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47,
	4, 48, 9, 48, 4, 49, 9, 49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 3,
	2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3,
	6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3,
	8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11,
	3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3,
	16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19,
	3, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3,
	24, 3, 25, 3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 29, 3, 29,
	3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 5, 30, 196, 10,
	30, 3, 31, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 3, 33, 3, 33,
	3, 33, 3, 33, 3, 33, 3, 34, 3, 34, 7, 34, 213, 10, 34, 12, 34, 14, 34,
	216, 11, 34, 3, 35, 5, 35, 219, 10, 35, 3, 35, 6, 35, 222, 10, 35, 13,
	35, 14, 35, 223, 3, 36, 5, 36, 227, 10, 36, 3, 36, 7, 36, 230, 10, 36,
	12, 36, 14, 36, 233, 11, 36, 3, 36, 3, 36, 6, 36, 237, 10, 36, 13, 36,
	14, 36, 238, 3, 37, 6, 37, 242, 10, 37, 13, 37, 14, 37, 243, 3, 37, 3,
	37, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 39,
	3, 39, 3, 39, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 41, 6, 41, 266, 10,
	41, 13, 41, 14, 41, 267, 3, 41, 3, 41, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42,
	3, 42, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 44, 6, 44, 284, 10, 44, 13,
	44, 14, 44, 285, 3, 44, 3, 44, 3, 45, 3, 45, 3, 45, 3, 45, 3, 46, 3, 46,
	3, 46, 3, 46, 3, 47, 3, 47, 3, 48, 6, 48, 301, 10, 48, 13, 48, 14, 48,
	302, 3, 49, 3, 49, 3, 49, 3, 49, 3, 50, 3, 50, 3, 50, 3, 50, 3, 51, 3,
	51, 3, 52, 6, 52, 316, 10, 52, 13, 52, 14, 52, 317, 2, 2, 53, 7, 2, 9,
	2, 11, 3, 13, 4, 15, 5, 17, 6, 19, 7, 21, 8, 23, 9, 25, 10, 27, 11, 29,
	12, 31, 13, 33, 14, 35, 15, 37, 16, 39, 17, 41, 18, 43, 19, 45, 20, 47,
	21, 49, 22, 51, 23, 53, 24, 55, 25, 57, 26, 59, 27, 61, 28, 63, 29, 65,
	30, 67, 31, 69, 32, 71, 33, 73, 34, 75, 35, 77, 36, 79, 37, 81, 38, 83,
	39, 85, 40, 87, 41, 89, 42, 91, 43, 93, 44, 95, 45, 97, 46, 99, 47, 101,
	48, 103, 49, 105, 50, 107, 51, 7, 2, 3, 4, 5, 6, 12, 4, 2, 45, 45, 47,
	47, 3, 2, 50, 59, 5, 2, 67, 92, 97, 97, 99, 124, 6, 2, 50, 59, 67, 92,
	97, 97, 99, 124, 4, 2, 11, 12, 34, 34, 3, 2, 12, 12, 3, 2, 49, 49, 3, 2,
	44, 44, 5, 2, 12, 12, 41, 41, 125, 125, 5, 2, 12, 12, 36, 36, 125, 125,
	2, 326, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17,
	3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2,
	25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2,
	2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2,
	2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2,
	2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3,
	2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63,
	3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2,
	71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2,
	2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 3, 83, 3, 2, 2, 2, 3, 85, 3, 2, 2,
	2, 4, 87, 3, 2, 2, 2, 4, 89, 3, 2, 2, 2, 4, 91, 3, 2, 2, 2, 5, 93, 3, 2,
	2, 2, 5, 95, 3, 2, 2, 2, 5, 97, 3, 2, 2, 2, 5, 99, 3, 2, 2, 2, 6, 101,
	3, 2, 2, 2, 6, 103, 3, 2, 2, 2, 6, 105, 3, 2, 2, 2, 6, 107, 3, 2, 2, 2,
	7, 109, 3, 2, 2, 2, 9, 111, 3, 2, 2, 2, 11, 113, 3, 2, 2, 2, 13, 116, 3,
	2, 2, 2, 15, 121, 3, 2, 2, 2, 17, 127, 3, 2, 2, 2, 19, 132, 3, 2, 2, 2,
	21, 138, 3, 2, 2, 2, 23, 140, 3, 2, 2, 2, 25, 142, 3, 2, 2, 2, 27, 145,
	3, 2, 2, 2, 29, 147, 3, 2, 2, 2, 31, 149, 3, 2, 2, 2, 33, 152, 3, 2, 2,
	2, 35, 155, 3, 2, 2, 2, 37, 158, 3, 2, 2, 2, 39, 161, 3, 2, 2, 2, 41, 164,
	3, 2, 2, 2, 43, 167, 3, 2, 2, 2, 45, 169, 3, 2, 2, 2, 47, 171, 3, 2, 2,
	2, 49, 173, 3, 2, 2, 2, 51, 175, 3, 2, 2, 2, 53, 177, 3, 2, 2, 2, 55, 179,
	3, 2, 2, 2, 57, 181, 3, 2, 2, 2, 59, 183, 3, 2, 2, 2, 61, 185, 3, 2, 2,
	2, 63, 195, 3, 2, 2, 2, 65, 197, 3, 2, 2, 2, 67, 201, 3, 2, 2, 2, 69, 205,
	3, 2, 2, 2, 71, 210, 3, 2, 2, 2, 73, 218, 3, 2, 2, 2, 75, 226, 3, 2, 2,
	2, 77, 241, 3, 2, 2, 2, 79, 247, 3, 2, 2, 2, 81, 253, 3, 2, 2, 2, 83, 259,
	3, 2, 2, 2, 85, 265, 3, 2, 2, 2, 87, 271, 3, 2, 2, 2, 89, 277, 3, 2, 2,
	2, 91, 283, 3, 2, 2, 2, 93, 289, 3, 2, 2, 2, 95, 293, 3, 2, 2, 2, 97, 297,
	3, 2, 2, 2, 99, 300, 3, 2, 2, 2, 101, 304, 3, 2, 2, 2, 103, 308, 3, 2,
	2, 2, 105, 312, 3, 2, 2, 2, 107, 315, 3, 2, 2, 2, 109, 110, 9, 2, 2, 2,
	110, 8, 3, 2, 2, 2, 111, 112, 9, 3, 2, 2, 112, 10, 3, 2, 2, 2, 113, 114,
	7, 107, 2, 2, 114, 115, 7, 104, 2, 2, 115, 12, 3, 2, 2, 2, 116, 117, 7,
	103, 2, 2, 117, 118, 7, 110, 2, 2, 118, 119, 7, 117, 2, 2, 119, 120, 7,
	103, 2, 2, 120, 14, 3, 2, 2, 2, 121, 122, 7, 121, 2, 2, 122, 123, 7, 106,
	2, 2, 123, 124, 7, 107, 2, 2, 124, 125, 7, 110, 2, 2, 125, 126, 7, 103,
	2, 2, 126, 16, 3, 2, 2, 2, 127, 128, 7, 118, 2, 2, 128, 129, 7, 116, 2,
	2, 129, 130, 7, 119, 2, 2, 130, 131, 7, 103, 2, 2, 131, 18, 3, 2, 2, 2,
	132, 133, 7, 104, 2, 2, 133, 134, 7, 99, 2, 2, 134, 135, 7, 110, 2, 2,
	135, 136, 7, 117, 2, 2, 136, 137, 7, 103, 2, 2, 137, 20, 3, 2, 2, 2, 138,
	139, 7, 42, 2, 2, 139, 22, 3, 2, 2, 2, 140, 141, 7, 43, 2, 2, 141, 24,
	3, 2, 2, 2, 142, 143, 7, 125, 2, 2, 143, 144, 7, 125, 2, 2, 144, 26, 3,
	2, 2, 2, 145, 146, 7, 125, 2, 2, 146, 28, 3, 2, 2, 2, 147, 148, 7, 127,
	2, 2, 148, 30, 3, 2, 2, 2, 149, 150, 7, 40, 2, 2, 150, 151, 7, 40, 2, 2,
	151, 32, 3, 2, 2, 2, 152, 153, 7, 126, 2, 2, 153, 154, 7, 126, 2, 2, 154,
	34, 3, 2, 2, 2, 155, 156, 7, 63, 2, 2, 156, 157, 7, 63, 2, 2, 157, 36,
	3, 2, 2, 2, 158, 159, 7, 35, 2, 2, 159, 160, 7, 63, 2, 2, 160, 38, 3, 2,
	2, 2, 161, 162, 7, 62, 2, 2, 162, 163, 7, 63, 2, 2, 163, 40, 3, 2, 2, 2,
	164, 165, 7, 64, 2, 2, 165, 166, 7, 63, 2, 2, 166, 42, 3, 2, 2, 2, 167,
	168, 7, 63, 2, 2, 168, 44, 3, 2, 2, 2, 169, 170, 7, 35, 2, 2, 170, 46,
	3, 2, 2, 2, 171, 172, 7, 47, 2, 2, 172, 48, 3, 2, 2, 2, 173, 174, 7, 45,
	2, 2, 174, 50, 3, 2, 2, 2, 175, 176, 7, 44, 2, 2, 176, 52, 3, 2, 2, 2,
	177, 178, 7, 49, 2, 2, 178, 54, 3, 2, 2, 2, 179, 180, 7, 39, 2, 2, 180,
	56, 3, 2, 2, 2, 181, 182, 7, 62, 2, 2, 182, 58, 3, 2, 2, 2, 183, 184, 7,
	64, 2, 2, 184, 60, 3, 2, 2, 2, 185, 186, 7, 46, 2, 2, 186, 62, 3, 2, 2,
	2, 187, 188, 7, 94, 2, 2, 188, 189, 7, 125, 2, 2, 189, 196, 7, 125, 2,
	2, 190, 191, 7, 94, 2, 2, 191, 196, 7, 41, 2, 2, 192, 193, 7, 94, 2, 2,
	193, 196, 7, 36, 2, 2, 194, 196, 5, 27, 12, 2, 195, 187, 3, 2, 2, 2, 195,
	190, 3, 2, 2, 2, 195, 192, 3, 2, 2, 2, 195, 194, 3, 2, 2, 2, 196, 64, 3,
	2, 2, 2, 197, 198, 7, 41, 2, 2, 198, 199, 3, 2, 2, 2, 199, 200, 8, 31,
	2, 2, 200, 66, 3, 2, 2, 2, 201, 202, 7, 36, 2, 2, 202, 203, 3, 2, 2, 2,
	203, 204, 8, 32, 3, 2, 204, 68, 3, 2, 2, 2, 205, 206, 7, 127, 2, 2, 206,
	207, 7, 127, 2, 2, 207, 208, 3, 2, 2, 2, 208, 209, 8, 33, 4, 2, 209, 70,
	3, 2, 2, 2, 210, 214, 9, 4, 2, 2, 211, 213, 9, 5, 2, 2, 212, 211, 3, 2,
	2, 2, 213, 216, 3, 2, 2, 2, 214, 212, 3, 2, 2, 2, 214, 215, 3, 2, 2, 2,
	215, 72, 3, 2, 2, 2, 216, 214, 3, 2, 2, 2, 217, 219, 5, 7, 2, 2, 218, 217,
	3, 2, 2, 2, 218, 219, 3, 2, 2, 2, 219, 221, 3, 2, 2, 2, 220, 222, 5, 9,
	3, 2, 221, 220, 3, 2, 2, 2, 222, 223, 3, 2, 2, 2, 223, 221, 3, 2, 2, 2,
	223, 224, 3, 2, 2, 2, 224, 74, 3, 2, 2, 2, 225, 227, 5, 7, 2, 2, 226, 225,
	3, 2, 2, 2, 226, 227, 3, 2, 2, 2, 227, 231, 3, 2, 2, 2, 228, 230, 5, 9,
	3, 2, 229, 228, 3, 2, 2, 2, 230, 233, 3, 2, 2, 2, 231, 229, 3, 2, 2, 2,
	231, 232, 3, 2, 2, 2, 232, 234, 3, 2, 2, 2, 233, 231, 3, 2, 2, 2, 234,
	236, 7, 48, 2, 2, 235, 237, 5, 9, 3, 2, 236, 235, 3, 2, 2, 2, 237, 238,
	3, 2, 2, 2, 238, 236, 3, 2, 2, 2, 238, 239, 3, 2, 2, 2, 239, 76, 3, 2,
	2, 2, 240, 242, 9, 6, 2, 2, 241, 240, 3, 2, 2, 2, 242, 243, 3, 2, 2, 2,
	243, 241, 3, 2, 2, 2, 243, 244, 3, 2, 2, 2, 244, 245, 3, 2, 2, 2, 245,
	246, 8, 37, 5, 2, 246, 78, 3, 2, 2, 2, 247, 248, 7, 49, 2, 2, 248, 249,
	7, 49, 2, 2, 249, 250, 3, 2, 2, 2, 250, 251, 8, 38, 6, 2, 251, 252, 8,
	38, 7, 2, 252, 80, 3, 2, 2, 2, 253, 254, 7, 49, 2, 2, 254, 255, 7, 44,
	2, 2, 255, 256, 3, 2, 2, 2, 256, 257, 8, 39, 8, 2, 257, 258, 8, 39, 7,
	2, 258, 82, 3, 2, 2, 2, 259, 260, 7, 12, 2, 2, 260, 261, 3, 2, 2, 2, 261,
	262, 8, 40, 4, 2, 262, 263, 8, 40, 7, 2, 263, 84, 3, 2, 2, 2, 264, 266,
	10, 7, 2, 2, 265, 264, 3, 2, 2, 2, 266, 267, 3, 2, 2, 2, 267, 265, 3, 2,
	2, 2, 267, 268, 3, 2, 2, 2, 268, 269, 3, 2, 2, 2, 269, 270, 8, 41, 7, 2,
	270, 86, 3, 2, 2, 2, 271, 272, 7, 44, 2, 2, 272, 273, 7, 49, 2, 2, 273,
	274, 3, 2, 2, 2, 274, 275, 8, 42, 4, 2, 275, 276, 8, 42, 7, 2, 276, 88,
	3, 2, 2, 2, 277, 278, 7, 44, 2, 2, 278, 279, 10, 8, 2, 2, 279, 280, 3,
	2, 2, 2, 280, 281, 8, 43, 7, 2, 281, 90, 3, 2, 2, 2, 282, 284, 10, 9, 2,
	2, 283, 282, 3, 2, 2, 2, 284, 285, 3, 2, 2, 2, 285, 283, 3, 2, 2, 2, 285,
	286, 3, 2, 2, 2, 286, 287, 3, 2, 2, 2, 287, 288, 8, 44, 7, 2, 288, 92,
	3, 2, 2, 2, 289, 290, 7, 41, 2, 2, 290, 291, 3, 2, 2, 2, 291, 292, 8, 45,
	4, 2, 292, 94, 3, 2, 2, 2, 293, 294, 5, 25, 11, 2, 294, 295, 3, 2, 2, 2,
	295, 296, 8, 46, 9, 2, 296, 96, 3, 2, 2, 2, 297, 298, 5, 63, 30, 2, 298,
	98, 3, 2, 2, 2, 299, 301, 10, 10, 2, 2, 300, 299, 3, 2, 2, 2, 301, 302,
	3, 2, 2, 2, 302, 300, 3, 2, 2, 2, 302, 303, 3, 2, 2, 2, 303, 100, 3, 2,
	2, 2, 304, 305, 7, 36, 2, 2, 305, 306, 3, 2, 2, 2, 306, 307, 8, 49, 4,
	2, 307, 102, 3, 2, 2, 2, 308, 309, 5, 25, 11, 2, 309, 310, 3, 2, 2, 2,
	310, 311, 8, 50, 9, 2, 311, 104, 3, 2, 2, 2, 312, 313, 5, 63, 30, 2, 313,
	106, 3, 2, 2, 2, 314, 316, 10, 11, 2, 2, 315, 314, 3, 2, 2, 2, 316, 317,
	3, 2, 2, 2, 317, 315, 3, 2, 2, 2, 317, 318, 3, 2, 2, 2, 318, 108, 3, 2,
	2, 2, 19, 2, 3, 4, 5, 6, 195, 214, 218, 223, 226, 231, 238, 243, 267, 285,
	302, 317, 10, 7, 5, 2, 7, 6, 2, 6, 2, 2, 2, 3, 2, 7, 3, 2, 8, 2, 2, 7,
	4, 2, 7, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE", "LINE_COMMENT", "BLOCK_COMMENT", "GCODE_SQ", "GCODE_DQ",
}

var lexerLiteralNames = []string{
	"", "'if'", "'else'", "'while'", "'true'", "'false'", "'('", "')'", "'{{'",
	"'{'", "'}'", "'&&'", "'||'", "'=='", "'!='", "'<='", "'>='", "'='", "'!'",
	"'-'", "'+'", "'*'", "'/'", "'%'", "'<'", "'>'", "','", "", "", "", "'}}'",
	"", "", "", "", "'//'", "'/*'", "'\n'", "", "'*/'",
}

var lexerSymbolicNames = []string{
	"", "IF", "ELSE", "WHILE", "TRUE", "FALSE", "L_PAREN", "R_PAREN", "LL_BRACE",
	"L_BRACE", "R_BRACE", "AND", "OR", "EQ", "N_EQ", "LT_EQ", "GT_EQ", "ASSIGN",
	"NOT", "MINUS", "PLUS", "TIMES", "DIV", "MOD", "LT", "GT", "COMMA", "GCODE_ESCAPE",
	"OPEN_GCODE_SQ", "OPEN_GCODE_DQ", "EXIT_EXPR", "IDENTIFIER", "INT", "FLOAT",
	"WS", "OPEN_LINE_COMMENT", "OPEN_BLOCK_COMMENT", "CLOSE_LINE_COMMENT",
	"LINE_COMMENT_TEXT", "CLOSE_BLOCK_COMMENT", "ESCAPED_CLOSE_BLOCK_COMMENT",
	"BLOCK_COMMENT_TEXT", "CLOSE_GCODE_SQ", "ENTER_EXPR_SQ", "ESCAPE_SEQUENCE_SQ",
	"TEXT_SQ", "CLOSE_GCODE_DQ", "ENTER_EXPR_DQ", "ESCAPE_SEQUENCE_DQ", "TEXT_DQ",
}

var lexerRuleNames = []string{
	"SIGN", "DIGIT", "IF", "ELSE", "WHILE", "TRUE", "FALSE", "L_PAREN", "R_PAREN",
	"LL_BRACE", "L_BRACE", "R_BRACE", "AND", "OR", "EQ", "N_EQ", "LT_EQ", "GT_EQ",
	"ASSIGN", "NOT", "MINUS", "PLUS", "TIMES", "DIV", "MOD", "LT", "GT", "COMMA",
	"GCODE_ESCAPE", "OPEN_GCODE_SQ", "OPEN_GCODE_DQ", "EXIT_EXPR", "IDENTIFIER",
	"INT", "FLOAT", "WS", "OPEN_LINE_COMMENT", "OPEN_BLOCK_COMMENT", "CLOSE_LINE_COMMENT",
	"LINE_COMMENT_TEXT", "CLOSE_BLOCK_COMMENT", "ESCAPED_CLOSE_BLOCK_COMMENT",
	"BLOCK_COMMENT_TEXT", "CLOSE_GCODE_SQ", "ENTER_EXPR_SQ", "ESCAPE_SEQUENCE_SQ",
	"TEXT_SQ", "CLOSE_GCODE_DQ", "ENTER_EXPR_DQ", "ESCAPE_SEQUENCE_DQ", "TEXT_DQ",
}

type SequenceLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
}

// NewSequenceLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *SequenceLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewSequenceLexer(input antlr.CharStream) *SequenceLexer {
	l := new(SequenceLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "SequenceLexer.g4"

	return l
}

// SequenceLexer tokens.
const (
	SequenceLexerIF                          = 1
	SequenceLexerELSE                        = 2
	SequenceLexerWHILE                       = 3
	SequenceLexerTRUE                        = 4
	SequenceLexerFALSE                       = 5
	SequenceLexerL_PAREN                     = 6
	SequenceLexerR_PAREN                     = 7
	SequenceLexerLL_BRACE                    = 8
	SequenceLexerL_BRACE                     = 9
	SequenceLexerR_BRACE                     = 10
	SequenceLexerAND                         = 11
	SequenceLexerOR                          = 12
	SequenceLexerEQ                          = 13
	SequenceLexerN_EQ                        = 14
	SequenceLexerLT_EQ                       = 15
	SequenceLexerGT_EQ                       = 16
	SequenceLexerASSIGN                      = 17
	SequenceLexerNOT                         = 18
	SequenceLexerMINUS                       = 19
	SequenceLexerPLUS                        = 20
	SequenceLexerTIMES                       = 21
	SequenceLexerDIV                         = 22
	SequenceLexerMOD                         = 23
	SequenceLexerLT                          = 24
	SequenceLexerGT                          = 25
	SequenceLexerCOMMA                       = 26
	SequenceLexerGCODE_ESCAPE                = 27
	SequenceLexerOPEN_GCODE_SQ               = 28
	SequenceLexerOPEN_GCODE_DQ               = 29
	SequenceLexerEXIT_EXPR                   = 30
	SequenceLexerIDENTIFIER                  = 31
	SequenceLexerINT                         = 32
	SequenceLexerFLOAT                       = 33
	SequenceLexerWS                          = 34
	SequenceLexerOPEN_LINE_COMMENT           = 35
	SequenceLexerOPEN_BLOCK_COMMENT          = 36
	SequenceLexerCLOSE_LINE_COMMENT          = 37
	SequenceLexerLINE_COMMENT_TEXT           = 38
	SequenceLexerCLOSE_BLOCK_COMMENT         = 39
	SequenceLexerESCAPED_CLOSE_BLOCK_COMMENT = 40
	SequenceLexerBLOCK_COMMENT_TEXT          = 41
	SequenceLexerCLOSE_GCODE_SQ              = 42
	SequenceLexerENTER_EXPR_SQ               = 43
	SequenceLexerESCAPE_SEQUENCE_SQ          = 44
	SequenceLexerTEXT_SQ                     = 45
	SequenceLexerCLOSE_GCODE_DQ              = 46
	SequenceLexerENTER_EXPR_DQ               = 47
	SequenceLexerESCAPE_SEQUENCE_DQ          = 48
	SequenceLexerTEXT_DQ                     = 49
)

// SequenceLexer modes.
const (
	SequenceLexerLINE_COMMENT = iota + 1
	SequenceLexerBLOCK_COMMENT
	SequenceLexerGCODE_SQ
	SequenceLexerGCODE_DQ
)
