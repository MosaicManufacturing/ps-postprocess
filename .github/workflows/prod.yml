name: Build and Deploy (prod)

on:
  push:
    branches: ['production']

env:
  DEPLOY_ENV: production

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test

  licensebot:
    name: Licensebot Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/license-check

  build:
    name: Compile
    runs-on: ubuntu-latest
    needs: ['test', 'licensebot']
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/build
      - uses: ./.github/actions/build
        with:
          os: windows
      - uses: ./.github/actions/build
        with:
          os: darwin
          build-suffix: -darwin

  deploy:
    name: Upload binary
    environment: production
    concurrency: deploy_prod
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    needs: ['build']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: ps-postprocess
      - uses: actions/download-artifact@v3
        with:
          name: ps-postprocess.exe
      - uses: actions/download-artifact@v3
        with:
          name: ps-postprocess-darwin
      - uses: ./.github/actions/s3-upload
        name: Upload Linux Artifact
        with:
          aws-role: ${{secrets.AWS_ROLE}}
          aws-region: ${{secrets.AWS_REGION}}
          s3-bucket: ${{secrets.S3_BUCKET}}
          s3-key: go-utils/ps-postprocess-${{env.DEPLOY_ENV}}
          binary-name: ps-postprocess
      - uses: ./.github/actions/s3-upload
        name: Upload Windows Artifact
        with:
          aws-role: ${{secrets.AWS_ROLE}}
          aws-region: ${{secrets.AWS_REGION}}
          s3-bucket: ${{secrets.S3_BUCKET}}
          s3-key: go-utils/ps-postprocess-windows-${{env.DEPLOY_ENV}}
          binary-name: ps-postprocess.exe
      - uses: ./.github/actions/s3-upload
        name: Upload MacOS Artifact
        with:
          aws-role: ${{secrets.AWS_ROLE}}
          aws-region: ${{secrets.AWS_REGION}}
          s3-bucket: ${{secrets.S3_BUCKET}}
          s3-key: go-utils/ps-postprocess-darwin-${{env.DEPLOY_ENV}}
          binary-name: ps-postprocess-darwin

  licensebot_trigger:
    name: Trigger Licensebot
    environment: production
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    concurrency: licensebot_trigger_prod
    needs: ['deploy']
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/license-publish
        with:
          deploy-env: ${{env.DEPLOY_ENV}}
          aws-role: ${{secrets.AWS_ROLE}}
          aws-region: ${{secrets.AWS_REGION}}
          function-name: ${{secrets.LICENSEBOT_ARN}}
          s3-source-bucket: ${{secrets.LICENSEBOT_S3_SOURCE_BUCKET}}
          s3-source-key: ${{env.DEPLOY_ENV}}/ps-postprocess.json
          s3-output-bucket: ${{secrets.LICENSEBOT_S3_OUTPUT_BUCKET}}
